/*! themeBuilder 2015-09-09 */
angular.module("_themeBuilder",_appConfig.modules.angular.concat(_appConfig.modules.themeBuilder)).run(function(APP){var self=this;self.getConstants=function(mod){for(var c={},i=0;i<mod.length;i++)"constant"===mod[i][1]&&(c.constants=!0,c[mod[i][2][0]]=mod[i][2][1]);return c},self.addConstantsToConfig=function(){for(var prop in APP.MODULES){var actModule=APP.MODULES[prop],constantes=self.getConstants(angular.module(actModule)._invokeQueue);constantes.hasOwnProperty("constants")&&(delete constantes.constants,angular.extend(APP,constantes))}},self.addConstantsToConfig()}),angular.module("_themeBuilder").constant("APP",{TEMPLATES:{INIT:"app/modules/views/theme.builder.init.tmpl.html",DESKTOP:"app/modules/views/theme.builder.for.desktop.tmpl.html",MOBILE:"app/modules/views/theme.builder.for.mobile.tmpl.html",SIDES:{BOTH:"app/modules/views/sides/theme.builder.for.both.tmpl.html",MOBILE:"app/modules/views/sides/theme.builder.for.mobile.tmpl.html",DESKTOP:"app/modules/views/sides/theme.builder.for.desktop.tmpl.html"}},MODULES:{},EVENTS:{"":""}}),angular.module("_themeBuilder").controller("ThemeBuilderController",function($scope,$rootScope,$state,$timeout,themeBuilderServices,APP){console.info("ThemeBuilderController Initialized!"),$scope.init=function(){$scope.theme="",$scope.expanded=!0,$scope.selectors=[],$scope.template={bothSides:APP.TEMPLATES.SIDES.BOTH,mobileSide:APP.TEMPLATES.SIDES.MOBILE,desktopSide:APP.TEMPLATES.SIDES.DESKTOP},$scope.useTemplate=$scope.template.bothSides,themeBuilderServices.$loadVariables().then(function(data){$scope.createSelectors(data)},function(errorData){console.error(errorData)}),themeBuilderServices.$loadRules().then(function(data){$scope.createCSSBase(data)},function(errorData){console.error(errorData)})},$scope.createCSSBase=function(data){$scope.defaultCssBase=data},$scope.updateCSSBase=function(event,data){$scope.defaultCssBase?$scope.cssBase=$scope.defaultCssBase+data:$scope.cssBase=data},$scope.createSelectors=function(data,add){add||($scope.defaultSelectors=angular.copy(data),$scope.selectors=data),$scope.selectors&&add?data.hasOwnProperty("less")&&($scope.selectors.less=[],$scope.selectors.less=$scope.defaultSelectors.less.concat(data.less)):$scope.selectors.less=$scope.defaultSelectors.less},$scope.addSelectors=function(event,data){$scope.createSelectors(data,!0)},$scope.createLess=function(event,data){var varLess=$scope.extractVariables();varLess+=$scope.cssBase;var lessOptions={compress:!1};less.render(varLess,lessOptions).then(function(output){$scope.theme=output.css,$scope.$apply()},function(error){console.log(error)})},$scope.extractVariables=function(){for(var lessVars="",i=0,l=$scope.selectors.less.length;l>i;i++)lessVars+=$scope.extractItems($scope.selectors.less[i]);return lessVars},$scope.extractItems=function(selector){var itemVar="";if(selector.items)for(var i=0,l=selector.items.length;l>i;i++)itemVar+=selector.items[i].hasOwnProperty("items")?$scope.extractItems(selector.items[i]):selector.items[i].key+":"+selector.items[i].value+";";return itemVar},$scope.update=function(event,data){$scope.theme="";for(var i=0,l=data.length;l>i;i++)angular.extend($scope,data[i])},$scope.$watch("theme",function(newValue,lastValue,scope){newValue!==lastValue&&angular.element("#theme").append(newValue)}),$rootScope.$on("colorpicker.change",$scope.createLess),$rootScope.$on("stateOptions",$scope.update),$rootScope.$on("updateSelectors",$scope.addSelectors),$rootScope.$on("updateCSSBase",$scope.updateCSSBase),$scope.init()}),angular.module("_themeBuilder").controller("ThemeBuilderDesktop",function($scope,$rootScope,$state,$timeout,themeBuilderServices,APP){console.info("ThemeBuilderController Initialized!"),themeBuilderServices.$loadVariables("desktop").then(function(data){$rootScope.$emit("updateSelectors",data)},function(errorData){console.error(errorData)}),themeBuilderServices.$loadRules("desktop").then(function(data){$rootScope.$emit("updateCSSBase",data)},function(errorData){console.error(errorData)})}),angular.module("_themeBuilder").controller("ThemeBuilderMobile",function($scope,$rootScope,$state,$timeout,themeBuilderServices,APP){console.info("ThemeBuilderController Initialized!"),themeBuilderServices.$loadVariables("mobile").then(function(data){$rootScope.$emit("updateSelectors",data)},function(errorData){console.error(errorData)}),themeBuilderServices.$loadRules("mobile.android").then(function(data){$rootScope.$emit("updateCSSBase",data)},function(errorData){console.error(errorData)})}),angular.module("_themeBuilder").service("themeBuilderServices",function($q,$http){var self=this;self.$loadVariables=function(device){var deferred=$q.defer(),promise=deferred.promise,deviceJson=device?"variables."+device:"variables",urlJson="app/theme/json/"+deviceJson+".json";return $http.get(urlJson).then(function(response){deferred.resolve(response.data)},function(response){deferred.reject(response)}),promise},self.$loadRules=function(device){var deferred=$q.defer(),promise=deferred.promise,deviceJson=device?device+".rules":"all.rules",urlLess="app/theme/less/"+deviceJson+".less";return $http.get(urlLess).then(function(response){deferred.resolve(response.data)},function(response){deferred.reject(response)}),promise}}),angular.module("_themeBuilder").config(function($stateProvider,$urlRouterProvider,APP){$urlRouterProvider.when("","/themeBuilder"),$urlRouterProvider.when("/","/themeBuilder"),$stateProvider.state("themeBuilder",{url:"/themeBuilder",templateUrl:APP.TEMPLATES.INIT,options:[{expanded:!0}]}).state("themeBuilder.desktop",{url:"/desktop",templateUrl:APP.TEMPLATES.DESKTOP,controller:"ThemeBuilderDesktop",options:[{expanded:!1}]}).state("themeBuilder.mobile",{url:"/mobile",templateUrl:APP.TEMPLATES.MOBILE,controller:"ThemeBuilderMobile",options:[{expanded:!1}]}).state("themeBuilder.error",{url:"/error",templateUrl:APP.TEMPLATES.ERROR,options:[{expanded:!1}]})}).run(function($rootScope,$state,APP,$timeout){$rootScope.$off=function(name){return $rootScope.$$listeners[name]=[],$rootScope},$rootScope.$offAll=function(){return $rootScope.$$listeners={},$rootScope},$rootScope.$on("$stateChangeStart",function(event,toState){toState&&toState.hasOwnProperty("options")&&$rootScope.$emit("stateOptions",toState.options)})});var checkRouting=function($q,$rootScope,$http,$data,APP){if($data.$login())return!1;if(_.keys(APP.APPLICATION_MODULE.API.PATH).length>1)return!0;var deferred=$q.defer();return $http.get("services.json").success(function(dataDiscovery){angular.extend(APP.APPLICATION_MODULE.API.PATH,dataDiscovery),deferred.resolve(!0)}).error(function(){deferred.reject()}),deferred.promise};angular.module("selectorModule",[]),angular.module("selectorModule").controller("SelectorController",function(){});